// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                  Int                 @id @default(autoincrement()) 
  password            String 
  number              String              @unique
  name                String?
  balance             Balance?            
  onRampTransactions onRampTransaction[] 
  fromUser            p2ptransfer[]       @relation(name: "fromUserRelation")
  toUser              p2ptransfer[]       @relation(name: "toUserRelation")
}

model p2ptransfer {
  id              Int                @id @default(autoincrement()) 
  amount          Int
  timestamp       DateTime
   from           Int      
  fromAccount     User      @relation(name: "fromUserRelation", fields: [from], references: [id])
  to              Int       
  toAccount       User      @relation(name: "toUserRelation", fields: [to], references: [id])
}

model onRampTransaction {
  id         Int        @id @default(autoincrement())
  status     onRampStatus
  token      String     @unique
  provider   String 
  amount     Int
  startTime  DateTime
  userId     Int  
  user       User         @relation(fields: [userId], references: [id])
}

model Balance {
  id        Int       @id @default(autoincrement()) 
  amount    Int
  locked    Int 
  userId    Int      @unique
  user      User       @relation(fields: [userId], references: [id])
}

enum onRampStatus {
  success
  failure
  processing
}